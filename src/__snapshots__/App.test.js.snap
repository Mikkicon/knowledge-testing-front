// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Snapshot tests (toMatchSnapshot()): <Landing/> 1`] = `
<div
  className="landingCont"
>
  <div
    className="burger"
  >
    <input
      type="checkbox"
    />
    <span />
    <span />
    <span />
    <div
      className="leftMenuCont"
    >
      <ul>
        <li>
          <a
            href="/coding"
            onClick={[Function]}
          >
            <svg
              aria-hidden="true"
              className="svg-inline--fa fa-code fa-w-20 "
              data-icon="code"
              data-prefix="fas"
              focusable="false"
              role="img"
              style={Object {}}
              viewBox="0 0 640 512"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M278.9 511.5l-61-17.7c-6.4-1.8-10-8.5-8.2-14.9L346.2 8.7c1.8-6.4 8.5-10 14.9-8.2l61 17.7c6.4 1.8 10 8.5 8.2 14.9L293.8 503.3c-1.9 6.4-8.5 10.1-14.9 8.2zm-114-112.2l43.5-46.4c4.6-4.9 4.3-12.7-.8-17.2L117 256l90.6-79.7c5.1-4.5 5.5-12.3.8-17.2l-43.5-46.4c-4.5-4.8-12.1-5.1-17-.5L3.8 247.2c-5.1 4.7-5.1 12.8 0 17.5l144.1 135.1c4.9 4.6 12.5 4.4 17-.5zm327.2.6l144.1-135.1c5.1-4.7 5.1-12.8 0-17.5L492.1 112.1c-4.8-4.5-12.4-4.3-17 .5L431.6 159c-4.6 4.9-4.3 12.7.8 17.2L523 256l-90.6 79.7c-5.1 4.5-5.5 12.3-.8 17.2l43.5 46.4c4.5 4.9 12.1 5.1 17 .6z"
                fill="currentColor"
                style={Object {}}
              />
            </svg>
             Coding
          </a>
        </li>
        <li>
          <a
            href="/psycology"
            onClick={[Function]}
          >
            <svg
              aria-hidden="true"
              className="svg-inline--fa fa-brain fa-w-18 "
              data-icon="brain"
              data-prefix="fas"
              focusable="false"
              role="img"
              style={Object {}}
              viewBox="0 0 576 512"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M208 0c-29.9 0-54.7 20.5-61.8 48.2-.8 0-1.4-.2-2.2-.2-35.3 0-64 28.7-64 64 0 4.8.6 9.5 1.7 14C52.5 138 32 166.6 32 200c0 12.6 3.2 24.3 8.3 34.9C16.3 248.7 0 274.3 0 304c0 33.3 20.4 61.9 49.4 73.9-.9 4.6-1.4 9.3-1.4 14.1 0 39.8 32.2 72 72 72 4.1 0 8.1-.5 12-1.2 9.6 28.5 36.2 49.2 68 49.2 39.8 0 72-32.2 72-72V64c0-35.3-28.7-64-64-64zm368 304c0-29.7-16.3-55.3-40.3-69.1 5.2-10.6 8.3-22.3 8.3-34.9 0-33.4-20.5-62-49.7-74 1-4.5 1.7-9.2 1.7-14 0-35.3-28.7-64-64-64-.8 0-1.5.2-2.2.2C422.7 20.5 397.9 0 368 0c-35.3 0-64 28.6-64 64v376c0 39.8 32.2 72 72 72 31.8 0 58.4-20.7 68-49.2 3.9.7 7.9 1.2 12 1.2 39.8 0 72-32.2 72-72 0-4.8-.5-9.5-1.4-14.1 29-12 49.4-40.6 49.4-73.9z"
                fill="currentColor"
                style={Object {}}
              />
            </svg>
             Psycology
          </a>
        </li>
        <li>
          <a
            href="/flags"
            onClick={[Function]}
          >
            <svg
              aria-hidden="true"
              className="svg-inline--fa fa-flag fa-w-16 "
              data-icon="flag"
              data-prefix="fas"
              focusable="false"
              role="img"
              style={Object {}}
              viewBox="0 0 512 512"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M349.565 98.783C295.978 98.783 251.721 64 184.348 64c-24.955 0-47.309 4.384-68.045 12.013a55.947 55.947 0 0 0 3.586-23.562C118.117 24.015 94.806 1.206 66.338.048 34.345-1.254 8 24.296 8 56c0 19.026 9.497 35.825 24 45.945V488c0 13.255 10.745 24 24 24h16c13.255 0 24-10.745 24-24v-94.4c28.311-12.064 63.582-22.122 114.435-22.122 53.588 0 97.844 34.783 165.217 34.783 48.169 0 86.667-16.294 122.505-40.858C506.84 359.452 512 349.571 512 339.045v-243.1c0-23.393-24.269-38.87-45.485-29.016-34.338 15.948-76.454 31.854-116.95 31.854z"
                fill="currentColor"
                style={Object {}}
              />
            </svg>
             Flags
          </a>
        </li>
        <li>
          <a
            href="/movies"
            onClick={[Function]}
          >
            <svg
              aria-hidden="true"
              className="svg-inline--fa fa-film fa-w-16 "
              data-icon="film"
              data-prefix="fas"
              focusable="false"
              role="img"
              style={Object {}}
              viewBox="0 0 512 512"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M488 64h-8v20c0 6.6-5.4 12-12 12h-40c-6.6 0-12-5.4-12-12V64H96v20c0 6.6-5.4 12-12 12H44c-6.6 0-12-5.4-12-12V64h-8C10.7 64 0 74.7 0 88v336c0 13.3 10.7 24 24 24h8v-20c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v20h320v-20c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v20h8c13.3 0 24-10.7 24-24V88c0-13.3-10.7-24-24-24zM96 372c0 6.6-5.4 12-12 12H44c-6.6 0-12-5.4-12-12v-40c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v40zm0-96c0 6.6-5.4 12-12 12H44c-6.6 0-12-5.4-12-12v-40c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v40zm0-96c0 6.6-5.4 12-12 12H44c-6.6 0-12-5.4-12-12v-40c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v40zm272 208c0 6.6-5.4 12-12 12H156c-6.6 0-12-5.4-12-12v-96c0-6.6 5.4-12 12-12h200c6.6 0 12 5.4 12 12v96zm0-168c0 6.6-5.4 12-12 12H156c-6.6 0-12-5.4-12-12v-96c0-6.6 5.4-12 12-12h200c6.6 0 12 5.4 12 12v96zm112 152c0 6.6-5.4 12-12 12h-40c-6.6 0-12-5.4-12-12v-40c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v40zm0-96c0 6.6-5.4 12-12 12h-40c-6.6 0-12-5.4-12-12v-40c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v40zm0-96c0 6.6-5.4 12-12 12h-40c-6.6 0-12-5.4-12-12v-40c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v40z"
                fill="currentColor"
                style={Object {}}
              />
            </svg>
             Movies
          </a>
        </li>
      </ul>
    </div>
  </div>
  <div
    className="allTestsPreviewCont"
  >
    <h1 />
    <input
      className="textInput search"
      onChange={[Function]}
      placeholder="Search..."
      type="text"
    />
  </div>
  <div
    className="allTestsPreviewCont"
  >
    <button
      className="customBtn green pagination"
      disabled={true}
      onClick={[Function]}
    >
      PREV 10
    </button>
    <b>
      1
       / 
      1
    </b>
    <button
      className="customBtn green pagination"
      disabled={true}
      onClick={[Function]}
    >
      NEXT 10
    </button>
  </div>
  <div>
    <div
      className="filterBadge"
    >
      <div
        className="filterIcon"
      />
    </div>
    <input
      className="filterToggle"
      type="checkbox"
    />
    <div
      className="filterMenu"
    >
      <div>
        <h3>
          Hardness
        </h3>
        <br />
        <div
          className="answers"
        >
          <label>
            Easy
            <input
              id="0"
              name="hardness"
              onChange={[Function]}
              type="checkbox"
            />
            <span
              className=" square checkmark"
            />
          </label>
          <label>
            Medium
            <input
              id="1"
              name="hardness"
              onChange={[Function]}
              type="checkbox"
            />
            <span
              className="checkmark"
            />
          </label>
          <label>
            Hard
            <input
              id="2"
              name="hardness"
              onChange={[Function]}
              type="checkbox"
            />
            <span
              className="checkmark square"
            />
          </label>
        </div>
      </div>
      <hr />
      <div>
        <h3>
          Completion
        </h3>
        <br />
        <div
          className="answers"
        >
          <label>
            All
            <input
              id="all"
              name="completeness"
              onChange={[Function]}
              type="checkbox"
            />
            <span
              className="checkmark square"
            />
          </label>
          <label>
            Unsolved
            <input
              id="unsolved"
              name="completeness"
              onChange={[Function]}
              type="checkbox"
            />
            <span
              className="checkmark square"
            />
          </label>
          <label>
            Solved
            <input
              id="solved"
              name="completeness"
              onChange={[Function]}
              type="checkbox"
            />
            <span
              className="checkmark square"
            />
          </label>
        </div>
      </div>
      <hr />
      <div>
        <h3>
          Sort
        </h3>
        <br />
        <button
          className="sortBtn customBtn green"
          onClick={[Function]}
        >
          Name
          <b
            style={
              Object {
                "transform": "rotate(180deg)",
              }
            }
          />
        </button>
      </div>
      <hr />
      <div>
        <button
          className="customBtn green"
          onClick={[Function]}
        >
          Clear cached tests
        </button>
      </div>
    </div>
  </div>
  <div
    className="footer"
  >
    <a
      href="/contacts"
      onClick={[Function]}
    >
      Contacts
    </a>
     
    <a
      href="/faq"
      onClick={[Function]}
    >
      FAQ
    </a>
     
  </div>
</div>
`;

exports[`Snapshot tests (toMatchSnapshot()): <Test/> 1`] = `
<div>
  <h2>
    JavaScript
  </h2>
  <div
    className="container"
  >
    <div
      className="question"
    >
      1
      . 
      What is closure?
    </div>
    <div
      className="answers"
    >
      <label>
        <input
          checked={false}
          name="answer"
          onChange={[Function]}
          type="radio"
          value={0}
        />
        <p>
          A closure is the combination of a function and the lexical environment within which that function was declared.
        </p>
        <span
          className="round checkmark"
        />
      </label>
      <label>
        <input
          checked={false}
          name="answer"
          onChange={[Function]}
          type="radio"
          value={1}
        />
        <p>
          A closure is the combination of a function and the lexical environment within which that function was declared.
        </p>
        <span
          className="round checkmark"
        />
      </label>
      <label>
        <input
          checked={false}
          name="answer"
          onChange={[Function]}
          type="radio"
          value={2}
        />
        <p>
          A closure is the combination of a function and the lexical environment within which that function was declared.
        </p>
        <span
          className="round checkmark"
        />
      </label>
      <label>
        <input
          checked={false}
          name="answer"
          onChange={[Function]}
          type="radio"
          value={3}
        />
        <p>
          A closure is the combination of a function and the lexical environment within which that function was declared.
        </p>
        <span
          className="round checkmark"
        />
      </label>
    </div>
    <div
      className="testFooter"
    >
      <div
        className="pages"
      >
        <span
          className="page current"
        />
        <span
          className="page"
        />
        <span
          className="page"
        />
        <span
          className="page"
        />
        <span
          className="page"
        />
      </div>
      <span
        className="divider"
      />
      <div
        className="time"
      >
        <span
          className="clock"
        />
        <span
          id="time"
        >
          0:00
        </span>
      </div>
      <span
        className="divider"
      />
      <div
        className="navigate"
      >
        <span
          onClick={[Function]}
        >
          <i
            className="arrow left"
          />
        </span>
        <span
          onClick={[Function]}
        >
          <i
            className="arrow right"
          />
        </span>
      </div>
    </div>
  </div>
</div>
`;

exports[`Snapshot tests (toMatchSnapshot()): Empty test as prop to <Test/>: 1`] = `
<div>
  <h2>
    JavaScript
  </h2>
  <div
    className="container"
  >
    <div
      className="question"
    >
      1
      . 
      What is closure?
    </div>
    <div
      className="answers"
    >
      <label>
        <input
          checked={false}
          name="answer"
          onChange={[Function]}
          type="radio"
          value={0}
        />
        <p>
          A closure is the combination of a function and the lexical environment within which that function was declared.
        </p>
        <span
          className="round checkmark"
        />
      </label>
      <label>
        <input
          checked={false}
          name="answer"
          onChange={[Function]}
          type="radio"
          value={1}
        />
        <p>
          A closure is the combination of a function and the lexical environment within which that function was declared.
        </p>
        <span
          className="round checkmark"
        />
      </label>
      <label>
        <input
          checked={false}
          name="answer"
          onChange={[Function]}
          type="radio"
          value={2}
        />
        <p>
          A closure is the combination of a function and the lexical environment within which that function was declared.
        </p>
        <span
          className="round checkmark"
        />
      </label>
      <label>
        <input
          checked={false}
          name="answer"
          onChange={[Function]}
          type="radio"
          value={3}
        />
        <p>
          A closure is the combination of a function and the lexical environment within which that function was declared.
        </p>
        <span
          className="round checkmark"
        />
      </label>
    </div>
    <div
      className="testFooter"
    >
      <div
        className="pages"
      >
        <span
          className="page current"
        />
        <span
          className="page"
        />
        <span
          className="page"
        />
        <span
          className="page"
        />
        <span
          className="page"
        />
      </div>
      <span
        className="divider"
      />
      <div
        className="time"
      >
        <span
          className="clock"
        />
        <span
          id="time"
        >
          0:00
        </span>
      </div>
      <span
        className="divider"
      />
      <div
        className="navigate"
      >
        <span
          onClick={[Function]}
        >
          <i
            className="arrow left"
          />
        </span>
        <span
          onClick={[Function]}
        >
          <i
            className="arrow right"
          />
        </span>
      </div>
    </div>
  </div>
</div>
`;

exports[`Snapshot tests (toMatchSnapshot()): Non-Object (3) as prop to <Test/>: 1`] = `
<div>
  <h2>
    JavaScript
  </h2>
  <div
    className="container"
  >
    <div
      className="question"
    >
      1
      . 
      What is closure?
    </div>
    <div
      className="answers"
    >
      <label>
        <input
          checked={false}
          name="answer"
          onChange={[Function]}
          type="radio"
          value={0}
        />
        <p>
          A closure is the combination of a function and the lexical environment within which that function was declared.
        </p>
        <span
          className="round checkmark"
        />
      </label>
      <label>
        <input
          checked={false}
          name="answer"
          onChange={[Function]}
          type="radio"
          value={1}
        />
        <p>
          A closure is the combination of a function and the lexical environment within which that function was declared.
        </p>
        <span
          className="round checkmark"
        />
      </label>
      <label>
        <input
          checked={false}
          name="answer"
          onChange={[Function]}
          type="radio"
          value={2}
        />
        <p>
          A closure is the combination of a function and the lexical environment within which that function was declared.
        </p>
        <span
          className="round checkmark"
        />
      </label>
      <label>
        <input
          checked={false}
          name="answer"
          onChange={[Function]}
          type="radio"
          value={3}
        />
        <p>
          A closure is the combination of a function and the lexical environment within which that function was declared.
        </p>
        <span
          className="round checkmark"
        />
      </label>
    </div>
    <div
      className="testFooter"
    >
      <div
        className="pages"
      >
        <span
          className="page current"
        />
        <span
          className="page"
        />
        <span
          className="page"
        />
        <span
          className="page"
        />
        <span
          className="page"
        />
      </div>
      <span
        className="divider"
      />
      <div
        className="time"
      >
        <span
          className="clock"
        />
        <span
          id="time"
        >
          0:00
        </span>
      </div>
      <span
        className="divider"
      />
      <div
        className="navigate"
      >
        <span
          onClick={[Function]}
        >
          <i
            className="arrow left"
          />
        </span>
        <span
          onClick={[Function]}
        >
          <i
            className="arrow right"
          />
        </span>
      </div>
    </div>
  </div>
</div>
`;
